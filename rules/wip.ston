FamixCBContext{#contextBlock:'[ :collection | collection select: [ :e | e class = FamixNotebookCodeCell ]  ]',#summary:'',#name:'AllCodeCells'}FamixCBContext{#contextBlock:'[ :collection | \r    collection \r        flatCollect: [ :item | \r            item entities \r                select: [ :entity | entity class = FamixPythonImport ] \r        ] \r]',#summary:'',#name:'AllImports'}FamixCBContext{#contextBlock:'[ :collection | collection select: [:c | c cellId ~= 0 ] ]',#summary:'',#name:'AllExceptFirst'}FamixCBContext{#contextBlock:'[ :collection | \r    collection \r        flatCollect: [ :item | \r            item entities \r        ] \r]',#summary:'',#name:'FamixPythonEntities'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | entity isKindOf: FamixPythonImport ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Imports should be at top (3)',#rulesId:'3'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | entity entities isEmpty ])',#severity:Class[#FamixCBHintSeverity],#summary:'A code cell should not be empty',#name:'A code cell should not be empty (1)',#rulesId:'1'}FamixCBContext{#contextBlock:'[ :collection | (collection collect: [:e | e  ]) first asCollection ]',#summary:'',#name:'Model'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity mooseModel anySatisfy: [ :each | each isKindOf: FamixNotebookTextCell ]) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'should contain text cells (6)',#rulesId:'6'}FamixCBContext{#contextBlock:'[ :collection | \r    collection \r        flatCollect: [ :item | \r            item entities \r                select: [ :entity | entity class = FamixPythonGlobalVariable ] \r        ] \r]',#summary:'',#name:'AllVariable'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | \r\t| tool res condition | \r\ttool := PLUtils new \r\t\tmodel: entity mooseModel;\r\t\tyourself.\r\t\r\t(entity incomingAccesses isEmpty) \r\t\tifTrue: [ true ] \r\t\tifFalse: [\r\t\t\tres := (tool allImportedEntitiesName) \r\t\t\t\tdetect: [ :substring |\r\t\t\t\t\tentity incomingAccesses first sourceText includesSubstring: substring \r\t\t\t\t] ifNone: [].\r\t\t\t\r\t\t\t"If found we probably have an invocation"\r\t\t\t(res isNotNil) \r\t\t\t\tifTrue: [ false ] \r\t\t\t\tifFalse: [\r\t\t\t\t\tcondition := (entity incomingAccesses detect: [ :e | e isWrite ]) isNotNil \r\t\t\t\t\t\tand: [ (entity incomingAccesses select: [ :a | a isWrite not ]) isEmpty ].\r\t\t\t\t\tcondition\r\t\t\t\t]\r\t\t]\r])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'UnusedVar (5)',#rulesId:'5'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :i | i isFromImport ]  ]',#summary:'',#name:'AllFromImports'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity |\r| tool isUsed importedEntityName isInvoked isAnInvokedPackage|\rtool := PLUtils new\r\t        model: entity mooseModel;\r\t        yourself.\r\rimportedEntityName := entity importedEntity name.\risInvoked := tool isEntityNameInvoked: importedEntityName.\risUsed := tool isStringUsedIsInArgs: importedEntityName.\risAnInvokedPackage := tool isEntityNameAPackageInvoked: importedEntityName. \r\r(isInvoked or: (isUsed or: isAnInvokedPackage)) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'UnusedImportedEntity (4)',#rulesId:'4'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity sourceAnchor lineCount <= 35) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'To many lines (2)',#rulesId:'2'}FamixCBContext{#contextBlock:'[ :collection | (collection select: [:e | e class = FamixNotebookCodeCell ]) first entities first asCollection.]',#summary:'',#name:'PythonModel'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity mooseModel allInvocations anySatisfy: [ :i | i invokedEntity name = #watermark ] ) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'No watermark (7)',#rulesId:'7'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :cell | cell entities isEmpty not] ]',#summary:'',#name:' not empty cells'}FamixCBContext{#contextBlock:'[ :collection | collection flatCollect: [ :cell | cell entities ]]',#summary:'',#name:'Python entities'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :entity | entity class = FamixPythonGlobalVariable ] ]',#summary:'',#name:'Global variable'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | ((entity incomingAccesses select: [ :a | a isWrite = true  ] ) size < 2) not  ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Reafected var (8)',#rulesId:'8'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | ( ( #(\'X\' \'x\' \'Y\' \'y\') includes: entity name ) or: [ entity name size > 2 ] ) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Name too short (9)',#rulesId:'9'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :entity | entity class = FamixPythonFunction ] ]',#summary:'',#name:'Python functions'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | entity parameters size > 6 ])',#severity:Class[#FamixCBHintSeverity],#summary:'',#name:'Too many parameters (10)',#rulesId:'10'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity accesses select: [ :a | (entity parameters includes: a variable) not and: (entity localVariables includes: a variable) not  ] ) size > 0 ])',#severity:Class[#FamixCBHintSeverity],#summary:'',#name:'Global variable access in function (11)',#rulesId:'11'}OrderedCollection[0,1,1,3,4,1,0,7,1,9,2,11,1,0,14,1,16,17,18,18,17,21,21]