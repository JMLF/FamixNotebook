FamixCBContext{#contextBlock:'[ :collection | collection select: [ :e | e class = FamixNotebookCodeCell ]  ]',#summary:'',#name:'AllCodeCells'}FamixCBContext{#contextBlock:'[ :collection | \r    collection \r        flatCollect: [ :item | \r            item entities \r                select: [ :entity | entity class = FamixPythonImport ] \r        ] \r]',#summary:'',#name:'AllImports'}FamixCBContext{#contextBlock:'[ :collection | collection select: [:c | c cellId ~= 0 ] ]',#summary:'',#name:'AllExceptFirst'}FamixCBContext{#contextBlock:'[ :collection | \r    collection \r        flatCollect: [ :item | \r            item entities \r        ] \r]',#summary:'',#name:'FamixPythonEntities'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | entity isKindOf: FamixPythonImport ])',#severity:Class[#FamixCBWarningSeverity],#summary:'Move import statements to the first code cell to make  your notebook dependencies more explicit.',#name:'Imports should be at top',#rulesId:'15'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | entity entities isEmpty ])',#severity:Class[#FamixCBHintSeverity],#summary:'Keep your notebook clean by deleting unused cells.',#name:'Empty code cell',#rulesId:'1'}FamixCBContext{#contextBlock:'[ :collection | \r    collection \r        flatCollect: [ :item | \r            item entities \r                select: [ :entity | entity class = FamixPythonGlobalVariable ] \r        ] \r]',#summary:'',#name:'AllVariable'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | \r\t| tool res condition | \r\ttool := PLUtils new \r\t\tmodel: entity mooseModel;\r\t\tyourself.\r\t\r\t(entity incomingAccesses isEmpty) \r\t\tifTrue: [ true ] \r\t\tifFalse: [\r\t\t\tres := (tool allImportedEntitiesName) \r\t\t\t\tdetect: [ :substring |\r\t\t\t\t\tentity incomingAccesses first sourceText includesSubstring: substring . \r\t\t\t\t] ifNone: [].\r\t\t\t\r\t\t\t"If found we probably have an invocation"\r\t\t\t(res isNotNil) \r\t\t\t\tifTrue: [ false ] \r\t\t\t\tifFalse: [\r\t\t\t\t\tcondition := (entity incomingAccesses detect: [ :e | e isWrite ]) isNotNil \r\t\t\t\t\t\tand: [ (entity incomingAccesses select: [ :a | a isWrite not ]) isEmpty ].\r\t\t\t\t\tcondition\r\t\t\t\t]\r\t\t]\r])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Unused Variable',#rulesId:'19'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :i | i isFromImport ]  ]',#summary:'',#name:'AllFromImports'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity sourceAnchor lineCount <= 30) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'Consider consolidating your code outside the notebook  by moving utility functions to a structured and tested codebase. Use notebooks to display results, not to compute them.',#name:'Code cell too long',#rulesId:'2'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :cell | cell entities isEmpty not] ]',#summary:'',#name:' not empty cells'}FamixCBContext{#contextBlock:'[ :collection | collection flatCollect: [ :cell | cell entities ]]',#summary:'',#name:'Python entities'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :entity | entity class = FamixPythonGlobalVariable ] ]',#summary:'',#name:'Global variable'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | ((entity incomingAccesses select: [ :a | a isWrite = true  ] ) size < 2) not  ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Reafected var ',#rulesId:'4'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | ( ( #(\'X\' \'x\' \'Y\' \'y\') includes: entity name ) or: [ entity name size > 2 ] ) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Var name too short',#rulesId:'3'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :entity | entity class = FamixPythonFunction ] ]',#summary:'',#name:'Python functions'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | entity parameters size > 5 ])',#severity:Class[#FamixCBHintSeverity],#summary:'',#name:'Too many parameters',#rulesId:'7'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity accesses select: [ :a | (entity parameters includes: a variable) not and: (entity localVariables includes: a variable) not  ] ) size > 0 ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Global variable access in function',#rulesId:'6'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :entity | entity class = FamixPythonInvocation ] ]',#summary:'',#name:'Invocations'}FamixCBContext{#contextBlock:'[ :collection |\rcollection select: [ :i |\r\ti invokedEntity name = \'read_csv\' and: [ (i invokedEntity respondsTo: #parentPackage) ifTrue: \r\t\t[i invokedEntity parentPackage name = \'pandas\'] ifFalse: [ false ] ] ] ]',#summary:'',#name:'read_csv invocations'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity computeArgs anySatisfy: [ :p | p includesSubstring: \'dtype=\' ] ) not  ])',#severity:Class[#FamixCBWarningSeverity],#summary:'You should explicit your dtype param on pandas read_csv',#name:'Missing dtype param',#rulesId:'12'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | (entity computeArgs anySatisfy: [ :p | p includesSubstring: \'usecols=\' ] ) not  ])',#severity:Class[#FamixCBWarningSeverity],#summary:'You should explicit your usecols param on pandas read_csv',#name:'Missing usecols param',#rulesId:'13'}FamixCBContext{#contextBlock:'[ :collection | collection reject: [ :i | i importedEntity name = #*  ]  ]',#summary:'',#name:'reject star imports'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity |\r| tool isUsed importedEntityName isInvoked isAnInvokedPackage|\rtool := PLUtils new\r\t        model: entity mooseModel;\r\t        yourself.\r\rimportedEntityName := entity importedEntity name.\risInvoked := tool isEntityNameInvoked: importedEntityName.\risUsed := tool isStringUsedIsInArgs: importedEntityName.\risAnInvokedPackage := tool isEntityNameAPackageInvoked: importedEntityName. \r\r(isInvoked or: (isUsed or: isAnInvokedPackage)) not ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Unused import',#rulesId:'18'}FamixCBContext{#contextBlock:'[ :collection |\r\t\r"Famix voit merge comme une methode et ne resoud le parentPackage"\r"Le probleme est donc qu\'on a potentiellement un merge qui n\'a rien a voir"\r"On pourrait pour limiter Ã§a verifier la presence d\'un import de pandas"\rcollection select: [ :i |\r\ti invokedEntity name = \'merge\' ] ]',#summary:'',#name:'merge invocations'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity |\r| tool |\rtool := PLUtils new model: entity mooseModel.\r(tool isEntityImportedOrParentOfAnImport: \'pandas\') and: [\r\t((entity computeArgs anySatisfy: [ :p | p includesSubstring: \'on=\' ])\r\t\t and: [\r\t\t entity computeArgs anySatisfy: [ :p | p includesSubstring: \'how=\' ] ])\r\t\tnot ] ])',#severity:Class[#FamixCBWarningSeverity],#summary:'You should explicit the how and on paramters',#name:'Merge parameters should be explicit',#rulesId:'10'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity |\r| tool |\rtool := PLUtils new model: entity mooseModel.\r(tool isEntityImportedOrParentOfAnImport: \'pandas\') and: [\r\t(entity computeArgs anySatisfy: [ :p |\r\t\t p includesSubstring: \'validate=\' ]) not ] ])',#severity:Class[#FamixCBWarningSeverity],#summary:'You should explicit your validate parameter on a merge operation',#name:'Merge parameter validate should be explicit',#rulesId:'11'}FamixCBContext{#contextBlock:'[ :collection | collection select: [:i | (CriticsRules sklearnApiWithRandomness) includes: i invokedEntity name] ]',#summary:'',#name:'Random api invocations '}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity |\r| tool |\rtool := PLUtils new model: entity mooseModel.\r(tool isEntityImportedOrParentOfAnImport: \'sklearn\') and: [\r\tentity invokedEntity isStub and: [\r\t\t(entity computeArgs anySatisfy: [ :p |\r\t\t\t p includesSubstring: \'random_state=\' ]) not ] ] ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Uncontrolled randomness ',#rulesId:'9'}FamixCBContext{#contextBlock:'[ :collection | collection select: [:i | (CriticsRules pandasInplaceMethods) includes: i invokedEntity name] ]',#summary:'',#name:'Pandas in place methods invocations'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity |\r    | tool |\r    tool := PLUtils new model: entity mooseModel.\r    (tool isEntityImportedOrParentOfAnImport: \'pandas\') and: [\r        (entity invokedEntity isStub) and: [\r\t\t\t\t"inplace=True is restrictive, users can also use a bool var instead of True => future version should handle this"\r            (entity computeArgs anySatisfy: [ :a | a includesSubstring: \'inplace=True\' ]) not and: [\r                (tool isEntityInAnInvocation: entity) not and: [\r                    (tool isEntityAssignedInVar: entity) not\r                ]\r            ]\r        ]\r    ]\r])',#severity:Class[#FamixCBWarningSeverity],#summary:'Some methods can adopt in-place by default, while others return a copy. If the developer assumes an in-place approach, he will not assign the returned value to any variable.',#name:'In-place api missused',#rulesId:'8'}FamixCBContext{#contextBlock:'[ :collection | collection select: [:i | (CriticsRules sklearnApiWithHyperparameters) includes: i invokedEntity name] ]',#summary:'',#name:'sk api with hyperparams invocations'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | \r\t| tool |\rtool := PLUtils new model: entity mooseModel.\r(tool isEntityImportedOrParentOfAnImport: \'sklearn\') and: [ \r\t(entity computeArgs reject: [ :a | a includesSubstring: \'random_state=\']) isEmpty \r\t ] ])',#severity:Class[#FamixCBWarningSeverity],#summary:'',#name:'Hyperparameter Not Explicitly Set',#rulesId:'14'}FamixCBContext{#contextBlock:'[ :collection | collection select: [ :i | i isFromImport not ]  ]',#summary:'',#name:'Not from import'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity |\rentity alias isNotNil ifTrue: [\r\tentity importedEntity name = entity alias ] \rifFalse: [ false ]\r\r])',#severity:Class[#FamixCBHintSeverity],#summary:'Prefer using from x import y',#name:'Consider using from import',#rulesId:'17'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | entity localVariables size > 11 ])',#severity:Class[#FamixCBWarningSeverity],#summary:'Having too many locals may indicate that you\'re doing too much in a function and that classes regrouping some attributes could be created. Maybe operations could be separated in multiple functions. Are all your variables really closely related ?',#name:'Too many locals ',#rulesId:'5'}FamixCBCondition{#query:'(FQSelectScriptQuery script: [ :entity | |duplicatedImport| duplicatedImport := (entity mooseModel allImports select: [ :i | i importedEntity = entity importedEntity ]). duplicatedImport size > 1 ifTrue: [ (duplicatedImport first =  entity) ifTrue: [ false ] ifFalse: [ true ] ] ifFalse: [ false ] .  ])',#severity:Class[#FamixCBHintSeverity],#summary:'When a module is imported more than once.',#name:'Reimported',#rulesId:'16'}OrderedCollection[0,1,1,3,4,1,1,7,2,1,1,11,12,13,13,12,16,16,12,19,20,20,9,23,19,25,25,19,28,19,30,19,32,2,34,16,2]